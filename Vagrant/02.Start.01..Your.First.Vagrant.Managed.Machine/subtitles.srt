1
00:00:00,870 --> 00:00:04,450
Here we have new installs
of vagrant and VirtualBox.

2
00:00:06,420 --> 00:00:10,000
My baremetal environment
happens to be Ubuntu 22.04.

3
00:00:10,001 --> 00:00:13,900
However, the commands and outputs should
look quite similar when run elsewhere.

4
00:00:15,750 --> 00:00:18,360
To start using vagrant,
we need a Vagrantfile.

5
00:00:20,450 --> 00:00:24,780
A Vagrantfile typically lives
in a project, often in the project root.

6
00:00:26,810 --> 00:00:30,720
Let's create a directory called demo
to serve as our new project root.

7
00:00:32,570 --> 00:00:35,000
Next, we need
a machine definition.

8
00:00:36,540 --> 00:00:39,900
`vagrant init` makes creating
a basic definition simple.

9
00:00:41,420 --> 00:00:45,810
Since my baremetal environment is Ubuntu,
let's make our vm CentOS 7.

10
00:00:47,420 --> 00:00:49,000
The format change
of the prompt

11
00:00:49,001 --> 00:00:52,000
will make it clear in which environment
each command is run.

12
00:00:53,570 --> 00:00:56,150
We can see a Vagrantfile
is now present.

13
00:00:57,660 --> 00:00:59,120
Let's spin up our machine.

14
00:01:00,600 --> 00:01:02,780
One helpful feature
of `vagrant up` is that

15
00:01:02,781 --> 00:01:06,150
it automatically downloads
the configured box if absent.

16
00:01:07,420 --> 00:01:12,360
Another option is to use `vagrant box`
which let's you directly manage boxes.

17
00:01:13,510 --> 00:01:17,480
`vagrant box` includes subcommands
such as `add`, `update`, and `remove`.

18
00:01:18,900 --> 00:01:22,600
`vagrant box add` could have been
used to download the centos/7 box

19
00:01:22,601 --> 00:01:24,000
ahead of `vagrant up`.

20
00:01:25,450 --> 00:01:27,660
In this case, we're using
the box right away,

21
00:01:27,661 --> 00:01:29,900
so there's no advantage
to prefetching.

22
00:01:30,390 --> 00:01:33,360
However, it's an interesting option
to keep in mind.

23
00:01:35,000 --> 00:01:39,300
Now that our machine is running,
we can access it with `vagrant ssh`.

24
00:01:40,750 --> 00:01:43,000
A quick look in /etc/
and we can confirm

25
00:01:43,001 --> 00:01:45,750
that this is indeed
a CentOS 7 environment.

26
00:01:47,240 --> 00:01:50,150
Feel free to poke around
in this environment more now.

27
00:01:51,510 --> 00:01:54,000
When ready to leave,
simply logout.

28
00:01:54,001 --> 00:01:56,420
I tend to use control-d
to do so.

29
00:01:57,840 --> 00:02:01,180
Finally, we use `vagrant destroy`
to clean up.

30
00:02:02,900 --> 00:02:06,780
That vm is now gone and the cpu,
memory, and storage resources

31
00:02:06,781 --> 00:02:08,690
it was consuming
have been freed.

32
00:02:09,660 --> 00:02:10,480
So cool.
